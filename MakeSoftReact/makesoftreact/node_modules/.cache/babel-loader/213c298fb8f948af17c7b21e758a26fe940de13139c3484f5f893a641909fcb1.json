{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozmar\\\\OneDrive\\\\Documents\\\\GitHub\\\\MakeSoft-SOEN341_Project_F24\\\\MakeSoftReact\\\\makesoftreact\\\\src\\\\instructorPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Form, Button, Message, List } from 'semantic-ui-react';\n\n// const InstructorPage = () => {\n//   const [teamName, setTeamName] = useState('');\n//   const [section, setSection] = useState('');\n//   const [studentIds, setStudentIds] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [students, setStudents] = useState([]); // Changed from teams to students for clarity\n\n//   // Function to create a team\n//   const createTeam = async () => {\n//     try {\n//       const response = await axios.post('http://localhost:8080/api/teams/create', {\n//         teamName,\n//         section,\n//         studentIds: studentIds.split(','), // Split by comma for multiple students\n//       });\n//       setMessage(response.data);\n//       fetchStudentsBySection(section); // Refresh students list\n//     } catch (error) {\n//       console.error(error);\n//       setMessage('Failed to create team.');\n//     }\n//   };\n\n//   // Function to fetch students by section\n//   const fetchStudentsBySection = async (section) => {\n//     try {\n//       // Make a request to the backend to get the list of students by section\n//       const response = await axios.get(`http://localhost:8080/api/instructors/${section}/students`);\n\n//       // Assuming the response data contains the list of students\n//       setStudents(response.data); // Changed from setTeams to setStudents\n//     } catch (error) {\n//       console.error('Error fetching students by section:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (section) {\n//       fetchStudentsBySection(section);\n//     }\n//   }, [section]);\n\n//   return (\n//     <div>\n//       <h1>Instructor Page</h1>\n//       <Form>\n//         <Form.Field>\n//           <label>Team Name</label>\n//           <input placeholder=\"Enter Team Name\" value={teamName} onChange={(e) => setTeamName(e.target.value)} />\n//         </Form.Field>\n//         <Form.Field>\n//           <label>Section</label>\n//           <input placeholder=\"Enter Section\" value={section} onChange={(e) => setSection(e.target.value)} />\n//         </Form.Field>\n//         <Form.Field>\n//           <label>Student IDs (comma separated)</label>\n//           <input placeholder=\"Enter Student IDs\" value={studentIds} onChange={(e) => setStudentIds(e.target.value)} />\n//         </Form.Field>\n//         <Button onClick={createTeam}>Create Team</Button>\n//       </Form>\n\n//       {message && <Message content={message} />}\n\n//       <h1>Students in Section {section}</h1>\n//       <ul>\n//         {students.map((student, index) => (\n//           <li key={index}>\n//             {student.name} - {student.email} - Team {student.team}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default InstructorPage;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstructorPage = ({\n  section\n}) => {\n  _s();\n  const [students, setStudents] = useState([]);\n\n  // Fetch students for the instructor's section\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/instructors/${section}/students`);\n        setStudents(response.data);\n      } catch (error) {\n        console.error('Error fetching students:', error);\n      }\n    };\n    fetchStudents();\n  }, [section]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Students in Section \", section]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.name, \" - \", student.email, \" - Team \", student.team]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(InstructorPage, \"Xxsbsc/n21pueGlfwfykfeIEF1E=\");\n_c = InstructorPage;\nexport default InstructorPage;\nvar _c;\n$RefreshReg$(_c, \"InstructorPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","InstructorPage","section","_s","students","setStudents","fetchStudents","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","student","index","name","email","team","_c","$RefreshReg$"],"sources":["C:/Users/ozmar/OneDrive/Documents/GitHub/MakeSoft-SOEN341_Project_F24/MakeSoftReact/makesoftreact/src/instructorPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Form, Button, Message, List } from 'semantic-ui-react';\r\n\r\n// const InstructorPage = () => {\r\n//   const [teamName, setTeamName] = useState('');\r\n//   const [section, setSection] = useState('');\r\n//   const [studentIds, setStudentIds] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [students, setStudents] = useState([]); // Changed from teams to students for clarity\r\n\r\n//   // Function to create a team\r\n//   const createTeam = async () => {\r\n//     try {\r\n//       const response = await axios.post('http://localhost:8080/api/teams/create', {\r\n//         teamName,\r\n//         section,\r\n//         studentIds: studentIds.split(','), // Split by comma for multiple students\r\n//       });\r\n//       setMessage(response.data);\r\n//       fetchStudentsBySection(section); // Refresh students list\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       setMessage('Failed to create team.');\r\n//     }\r\n//   };\r\n\r\n//   // Function to fetch students by section\r\n//   const fetchStudentsBySection = async (section) => {\r\n//     try {\r\n//       // Make a request to the backend to get the list of students by section\r\n//       const response = await axios.get(`http://localhost:8080/api/instructors/${section}/students`);\r\n      \r\n//       // Assuming the response data contains the list of students\r\n//       setStudents(response.data); // Changed from setTeams to setStudents\r\n//     } catch (error) {\r\n//       console.error('Error fetching students by section:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (section) {\r\n//       fetchStudentsBySection(section);\r\n//     }\r\n//   }, [section]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Instructor Page</h1>\r\n//       <Form>\r\n//         <Form.Field>\r\n//           <label>Team Name</label>\r\n//           <input placeholder=\"Enter Team Name\" value={teamName} onChange={(e) => setTeamName(e.target.value)} />\r\n//         </Form.Field>\r\n//         <Form.Field>\r\n//           <label>Section</label>\r\n//           <input placeholder=\"Enter Section\" value={section} onChange={(e) => setSection(e.target.value)} />\r\n//         </Form.Field>\r\n//         <Form.Field>\r\n//           <label>Student IDs (comma separated)</label>\r\n//           <input placeholder=\"Enter Student IDs\" value={studentIds} onChange={(e) => setStudentIds(e.target.value)} />\r\n//         </Form.Field>\r\n//         <Button onClick={createTeam}>Create Team</Button>\r\n//       </Form>\r\n\r\n//       {message && <Message content={message} />}\r\n\r\n//       <h1>Students in Section {section}</h1>\r\n//       <ul>\r\n//         {students.map((student, index) => (\r\n//           <li key={index}>\r\n//             {student.name} - {student.email} - Team {student.team}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default InstructorPage;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst InstructorPage = ({ section }) => {\r\n  const [students, setStudents] = useState([]);\r\n\r\n  // Fetch students for the instructor's section\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/instructors/${section}/students`);\r\n        setStudents(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching students:', error);\r\n      }\r\n    };\r\n\r\n    fetchStudents();\r\n  }, [section]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Students in Section {section}</h1>\r\n      <ul>\r\n        {students.map((student, index) => (\r\n          <li key={index}>\r\n            {student.name} - {student.email} - Team {student.team}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorPage;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,yCAAyCN,OAAO,WAAW,CAAC;QAC7FG,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,oBACEF,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,GAAI,sBAAoB,EAACV,OAAO;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtChB,OAAA;MAAAY,QAAA,EACGR,QAAQ,CAACa,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BnB,OAAA;QAAAY,QAAA,GACGM,OAAO,CAACE,IAAI,EAAC,KAAG,EAACF,OAAO,CAACG,KAAK,EAAC,UAAQ,EAACH,OAAO,CAACI,IAAI;MAAA,GAD9CH,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CA7BIF,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}