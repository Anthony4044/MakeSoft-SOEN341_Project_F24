{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozmar\\\\OneDrive\\\\Documents\\\\GitHub\\\\MakeSoft-SOEN341_Project_F24\\\\MakeSoftReact\\\\makesoftreact\\\\src\\\\InstructorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Form, Button, Message, List } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstructorPage = () => {\n  _s();\n  const [teamName, setTeamName] = useState('');\n  const [section, setSection] = useState('');\n  const [studentIds, setStudentIds] = useState('');\n  const [message, setMessage] = useState('');\n  const [teams, setTeams] = useState([]);\n\n  // Function to create a team\n  //   const createTeam = async () => {\n  //     try {\n  //       const response = await axios.post('http://localhost:8080/api/teams/create', {\n  //         teamName,\n  //         section,\n  //         studentIds: studentIds.split(','), // Split by comma for multiple students\n  //       });\n  //       setMessage(response.data);\n  //       fetchTeamsBySection(section); // Refresh teams list\n  //     } catch (error) {\n  //       console.error(error);\n  //       setMessage('Failed to create team.');\n  //     }\n  //   };\n\n  // Function to fetch teams by section\n  //   const fetchTeamsBySection = async (section) => {\n  //     try {\n  //       const response = await axios.get(`http://localhost:8080/api/teams/section/${section}`);\n  //       setTeams(response.data);\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   };\n\n  //   useEffect(() => {\n  //     if (section) {\n  //       fetchTeamsBySection(section);\n  //     }\n  //   }, [section]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Instructor Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Team Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Team Name\",\n          value: teamName,\n          onChange: e => setTeamName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Section\",\n          value: section,\n          onChange: e => setSection(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Student IDs (comma separated)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Student IDs\",\n          value: studentIds,\n          onChange: e => setStudentIds(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: createTeam,\n        children: \"Create Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      content: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Teams in Section \", section]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: teams.map((team, index) => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: team.teamName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), \": \", team.studentIds.join(', ')]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(InstructorPage, \"Y5Cl/QZMHbU6yWSLjgxPSy4AXfk=\");\n_c = InstructorPage;\nexport default InstructorPage;\nvar _c;\n$RefreshReg$(_c, \"InstructorPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Form","Button","Message","List","jsxDEV","_jsxDEV","InstructorPage","_s","teamName","setTeamName","section","setSection","studentIds","setStudentIds","message","setMessage","teams","setTeams","children","fileName","_jsxFileName","lineNumber","columnNumber","Field","placeholder","value","onChange","e","target","onClick","createTeam","content","map","team","index","Item","join","_c","$RefreshReg$"],"sources":["C:/Users/ozmar/OneDrive/Documents/GitHub/MakeSoft-SOEN341_Project_F24/MakeSoftReact/makesoftreact/src/InstructorPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Message, List } from 'semantic-ui-react';\r\n\r\nconst InstructorPage = () => {\r\n  const [teamName, setTeamName] = useState('');\r\n  const [section, setSection] = useState('');\r\n  const [studentIds, setStudentIds] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [teams, setTeams] = useState([]);\r\n\r\n  // Function to create a team\r\n//   const createTeam = async () => {\r\n//     try {\r\n//       const response = await axios.post('http://localhost:8080/api/teams/create', {\r\n//         teamName,\r\n//         section,\r\n//         studentIds: studentIds.split(','), // Split by comma for multiple students\r\n//       });\r\n//       setMessage(response.data);\r\n//       fetchTeamsBySection(section); // Refresh teams list\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       setMessage('Failed to create team.');\r\n//     }\r\n//   };\r\n\r\n  // Function to fetch teams by section\r\n//   const fetchTeamsBySection = async (section) => {\r\n//     try {\r\n//       const response = await axios.get(`http://localhost:8080/api/teams/section/${section}`);\r\n//       setTeams(response.data);\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (section) {\r\n//       fetchTeamsBySection(section);\r\n//     }\r\n//   }, [section]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Instructor Page</h1>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>Team Name</label>\r\n          <input placeholder=\"Enter Team Name\" value={teamName} onChange={(e) => setTeamName(e.target.value)} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Section</label>\r\n          <input placeholder=\"Enter Section\" value={section} onChange={(e) => setSection(e.target.value)} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Student IDs (comma separated)</label>\r\n          <input placeholder=\"Enter Student IDs\" value={studentIds} onChange={(e) => setStudentIds(e.target.value)} />\r\n        </Form.Field>\r\n        <Button onClick={createTeam}>Create Team</Button>\r\n      </Form>\r\n\r\n      {message && <Message content={message} />}\r\n\r\n      <h2>Teams in Section {section}</h2>\r\n      <List>\r\n        {teams.map((team, index) => (\r\n          <List.Item key={index}>\r\n            <strong>{team.teamName}</strong>: {team.studentIds.join(', ')}\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}